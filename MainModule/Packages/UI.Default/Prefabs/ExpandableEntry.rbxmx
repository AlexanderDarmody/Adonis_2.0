<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<Meta name="ExplicitAutoJoints">true</Meta>
	<External>null</External>
	<External>nil</External>
	<Item class="Frame" referent="RBX2AC93E2F57BA49C99C5D77B6CE2A9113">
		<Properties>
			<bool name="Active">false</bool>
			<Vector2 name="AnchorPoint">
				<X>0</X>
				<Y>0</Y>
			</Vector2>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="AutoLocalize">true</bool>
			<token name="AutomaticSize">0</token>
			<Color3 name="BackgroundColor3">
				<R>0</R>
				<G>0</G>
				<B>0</B>
			</Color3>
			<float name="BackgroundTransparency">1</float>
			<Color3 name="BorderColor3">
				<R>0.105882362</R>
				<G>0.164705887</G>
				<B>0.207843155</B>
			</Color3>
			<token name="BorderMode">0</token>
			<int name="BorderSizePixel">1</int>
			<bool name="ClipsDescendants">true</bool>
			<bool name="Draggable">false</bool>
			<int name="LayoutOrder">0</int>
			<string name="Name">ExpandableEntry</string>
			<Ref name="NextSelectionDown">null</Ref>
			<Ref name="NextSelectionLeft">null</Ref>
			<Ref name="NextSelectionRight">null</Ref>
			<Ref name="NextSelectionUp">null</Ref>
			<UDim2 name="Position">
				<XS>0</XS>
				<XO>0</XO>
				<YS>0</YS>
				<YO>0</YO>
			</UDim2>
			<Ref name="RootLocalizationTable">null</Ref>
			<float name="Rotation">0</float>
			<bool name="Selectable">false</bool>
			<Ref name="SelectionImageObject">null</Ref>
			<UDim2 name="Size">
				<XS>1</XS>
				<XO>0</XO>
				<YS>0</YS>
				<YO>40</YO>
			</UDim2>
			<token name="SizeConstraint">0</token>
			<int64 name="SourceAssetId">-1</int64>
			<token name="Style">0</token>
			<BinaryString name="Tags"></BinaryString>
			<bool name="Visible">false</bool>
			<int name="ZIndex">1</int>
		</Properties>
		<Item class="Frame" referent="RBX9303C58B422B42FE97B5C01F0DF12C29">
			<Properties>
				<bool name="Active">false</bool>
				<Vector2 name="AnchorPoint">
					<X>0</X>
					<Y>0</Y>
				</Vector2>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<bool name="AutoLocalize">true</bool>
				<token name="AutomaticSize">0</token>
				<Color3 name="BackgroundColor3">
					<R>0.282352954</R>
					<G>0.282352954</G>
					<B>0.282352954</B>
				</Color3>
				<float name="BackgroundTransparency">0</float>
				<Color3 name="BorderColor3">
					<R>0.105882362</R>
					<G>0.164705887</G>
					<B>0.207843155</B>
				</Color3>
				<token name="BorderMode">0</token>
				<int name="BorderSizePixel">0</int>
				<bool name="ClipsDescendants">false</bool>
				<bool name="Draggable">false</bool>
				<int name="LayoutOrder">0</int>
				<string name="Name">Divider</string>
				<Ref name="NextSelectionDown">null</Ref>
				<Ref name="NextSelectionLeft">null</Ref>
				<Ref name="NextSelectionRight">null</Ref>
				<Ref name="NextSelectionUp">null</Ref>
				<UDim2 name="Position">
					<XS>0.0359999985</XS>
					<XO>0</XO>
					<YS>1</YS>
					<YO>-1</YO>
				</UDim2>
				<Ref name="RootLocalizationTable">null</Ref>
				<float name="Rotation">0</float>
				<bool name="Selectable">true</bool>
				<Ref name="SelectionImageObject">null</Ref>
				<UDim2 name="Size">
					<XS>0.927554965</XS>
					<XO>0</XO>
					<YS>0</YS>
					<YO>1</YO>
				</UDim2>
				<token name="SizeConstraint">0</token>
				<int64 name="SourceAssetId">-1</int64>
				<token name="Style">0</token>
				<BinaryString name="Tags"></BinaryString>
				<bool name="Visible">true</bool>
				<int name="ZIndex">1</int>
			</Properties>
		</Item>
		<Item class="Frame" referent="RBXA0034946D14945E3B4E5D9F9C5D8D882">
			<Properties>
				<bool name="Active">false</bool>
				<Vector2 name="AnchorPoint">
					<X>0</X>
					<Y>0</Y>
				</Vector2>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<bool name="AutoLocalize">true</bool>
				<token name="AutomaticSize">0</token>
				<Color3 name="BackgroundColor3">
					<R>0</R>
					<G>0</G>
					<B>0</B>
				</Color3>
				<float name="BackgroundTransparency">1</float>
				<Color3 name="BorderColor3">
					<R>0.105882362</R>
					<G>0.164705887</G>
					<B>0.207843155</B>
				</Color3>
				<token name="BorderMode">0</token>
				<int name="BorderSizePixel">0</int>
				<bool name="ClipsDescendants">false</bool>
				<bool name="Draggable">false</bool>
				<int name="LayoutOrder">0</int>
				<string name="Name">MainContent</string>
				<Ref name="NextSelectionDown">null</Ref>
				<Ref name="NextSelectionLeft">null</Ref>
				<Ref name="NextSelectionRight">null</Ref>
				<Ref name="NextSelectionUp">null</Ref>
				<UDim2 name="Position">
					<XS>0</XS>
					<XO>0</XO>
					<YS>0</YS>
					<YO>0</YO>
				</UDim2>
				<Ref name="RootLocalizationTable">null</Ref>
				<float name="Rotation">0</float>
				<bool name="Selectable">false</bool>
				<Ref name="SelectionImageObject">null</Ref>
				<UDim2 name="Size">
					<XS>1</XS>
					<XO>0</XO>
					<YS>0</YS>
					<YO>40</YO>
				</UDim2>
				<token name="SizeConstraint">0</token>
				<int64 name="SourceAssetId">-1</int64>
				<token name="Style">0</token>
				<BinaryString name="Tags"></BinaryString>
				<bool name="Visible">true</bool>
				<int name="ZIndex">1</int>
			</Properties>
		</Item>
		<Item class="Frame" referent="RBXC48B43678409462BBD47B0DDDB73D80A">
			<Properties>
				<bool name="Active">false</bool>
				<Vector2 name="AnchorPoint">
					<X>0</X>
					<Y>0</Y>
				</Vector2>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<bool name="AutoLocalize">true</bool>
				<token name="AutomaticSize">0</token>
				<Color3 name="BackgroundColor3">
					<R>0</R>
					<G>0</G>
					<B>0</B>
				</Color3>
				<float name="BackgroundTransparency">1</float>
				<Color3 name="BorderColor3">
					<R>0.105882362</R>
					<G>0.164705887</G>
					<B>0.207843155</B>
				</Color3>
				<token name="BorderMode">0</token>
				<int name="BorderSizePixel">0</int>
				<bool name="ClipsDescendants">false</bool>
				<bool name="Draggable">false</bool>
				<int name="LayoutOrder">0</int>
				<string name="Name">SubContent</string>
				<Ref name="NextSelectionDown">null</Ref>
				<Ref name="NextSelectionLeft">null</Ref>
				<Ref name="NextSelectionRight">null</Ref>
				<Ref name="NextSelectionUp">null</Ref>
				<UDim2 name="Position">
					<XS>0</XS>
					<XO>0</XO>
					<YS>0</YS>
					<YO>40</YO>
				</UDim2>
				<Ref name="RootLocalizationTable">null</Ref>
				<float name="Rotation">0</float>
				<bool name="Selectable">false</bool>
				<Ref name="SelectionImageObject">null</Ref>
				<UDim2 name="Size">
					<XS>1</XS>
					<XO>0</XO>
					<YS>0</YS>
					<YO>80</YO>
				</UDim2>
				<token name="SizeConstraint">0</token>
				<int64 name="SourceAssetId">-1</int64>
				<token name="Style">0</token>
				<BinaryString name="Tags"></BinaryString>
				<bool name="Visible">true</bool>
				<int name="ZIndex">1</int>
			</Properties>
		</Item>
		<Item class="Folder" referent="RBX0DCA42178381472BA1257DC7B68CE60E">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<string name="Name">Controller</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
			<Item class="BindableFunction" referent="RBXED03977939C348788067E48BF5F0BF75">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<string name="Name">UIFunction</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBX0F2ED90B4026462993350707E21A4084">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">UIHandler</string>
					<string name="ScriptGuid">{85B636C2-2854-4878-8090-00F78E533FE6}</string>
					<ProtectedString name="Source"><![CDATA[--[[
	
	Description: Handles various aspects of the UI object & Fires events which can be listened to.
	Author: Sceleratis
	Date: 2/5/2022
	
--]]


--// Prefab variables
local folder = script.Parent
local prefab = folder.Parent
local objects = {}
local misc = {}

local expanded = false
local expanding = false

local UIEvent = prefab:FindFirstChild("UIEvent") or Instance.new("BindableEvent")
local UIFunction = prefab:FindFirstChild("UIFunction") or Instance.new("BindableFunction")

local Player = game:GetService("Players").LocalPlayer
local InputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

local ExpandButtonTweenInfo = TweenInfo.new(0.25, Enum.EasingStyle.Linear, Enum.EasingDirection.Out, 0, false, 0)
local ExpandButtonTweenOpen = { Rotation = 180 }
local ExpandButtonTweenClose = { Rotation = 0 }
local ExpandButtonTween

local ExpandTweenInfo = TweenInfo.new(0.25, Enum.EasingStyle.Linear, Enum.EasingDirection.Out, 0, false, 0)
local ExpandTween = false


--// Property handlers
local PropertyHandlers = {
	MainContentSize = function(value)
		objects.MainContent.Size = value
		SizeUpdate()
	end,
	
	SubContentSize = function(value)
		objects.SubContent.Size = value
		SizeUpdate()
	end,
	
	ExpandEnabled = function(value)
		objects.Expand.Visible = value
	end,
}

--// Interface methods
local InterfaceMethods = {
	SetProperties = function(self, properties)
		for prop,val in pairs(properties) do
			local handler = PropertyHandlers[prop]
			if handler then
				handler(val)
			else
				prefab[prop] = val
			end
		end
	end,
	
	Expand = function(self, value)
		Expand(value)
	end,
	
	GetMainFrame = function(self)
		return objects.MainContent
	end,
	
	GetSubFrame = function(self)
		return objects.SubContent
	end,
	
	SubFrameEnabled = function(self, value)
		objects.SubContent.Visible = value
		objects.Expand.Visible = value
	end,
}

--// Event/function handlers
local function InterfaceHandler(method, ...)
	local found = InterfaceMethods[method]
	if found then
		return found(InterfaceMethods, ...)
	else
		warn("Window prefab interface method not found: ".. tostring(method))
	end
end

function FireEvent(type, ...)
	UIEvent:Fire(type, ...)
end


--// Helper functions
function IsInFrame(obj, x, y)
	local absPos = obj.AbsolutePosition
	local absSize = obj.AbsoluteSize

	return (x >= absPos.X and x <= absPos.X + absSize.X) and (y >= absPos.Y and y <= absPos.Y + absSize.Y)
end


--// Prefab-specific events/functionality
function SizeUpdate()
	prefab.Size = UDim2.new(objects.MainContent.Size.X.Scale, objects.MainContent.Size.X.Offset, 0, objects.MainContent.AbsoluteSize.Y + (if expanded then objects.SubContent.AbsoluteSize.Y else 0))
end

local function ExpandTweenComplete(playbackState)
	expanding = false

	if playbackState == Enum.PlaybackState.Completed then
		expanded = not expanded
		objects.SubContent.Visible = expanded
		FireEvent("Expanded", expanded)
	elseif ExpandButtonTween then
		ExpandButtonTween:Cancel()
		ExpandButtonTween = nil
	end
end

function Expand(open)
	if not expanding then
		expanding = true

		if open then
			ExpandButtonTween = TweenService:Create(objects.Expand, ExpandButtonTweenInfo, ExpandButtonTweenOpen)
			ExpandTween = TweenService:Create(prefab, ExpandTweenInfo, {
				Size = UDim2.new(objects.MainContent.Size.X.Scale, objects.MainContent.Size.X.Offset, 0, objects.SubContent.AbsoluteSize.Y + objects.MainContent.AbsoluteSize.Y)
			})
			
			objects.SubContent.Visible = true
			ExpandTween.Completed:Connect(ExpandTweenComplete)
			ExpandButtonTween:Play()
			ExpandTween:Play()
		else
			ExpandButtonTween = TweenService:Create(objects.Expand, ExpandButtonTweenInfo, ExpandButtonTweenClose)
			ExpandTween = TweenService:Create(prefab, ExpandTweenInfo, {
				Size = UDim2.new(objects.MainContent.Size.X.Scale, objects.MainContent.Size.X.Offset, 0, objects.MainContent.AbsoluteSize.Y)
			})

			ExpandTween.Completed:Connect(ExpandTweenComplete)
			ExpandButtonTween:Play()
			ExpandTween:Play()
		end
	end
end

--// Input handlers
local function ExpandToggle()
	Expand(not expanded)
end

--// Init
local function Init()
	UIEvent.Name = "UIEvent"
	UIFunction.Name = "UIFunction"

	for i,obj in ipairs(prefab:GetChildren()) do
		objects[obj.Name] = obj
	end
	
	originalSize = objects.MainContent.Size
	objects.Expand.Activated:Connect(ExpandToggle)
	
	FireEvent("Init")
end

--// Events
UIFunction.OnInvoke = InterfaceHandler

--// Misc
Init()]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
			<Item class="BindableEvent" referent="RBX59BBC17464EC4065BBDAD7FF12346331">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<string name="Name">UIEvent</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBXB46EE04B4EF041DA84C0884B0D6E80A0">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Interface</string>
					<string name="ScriptGuid">{3BC65994-F6A9-4DC2-B75B-132397101307}</string>
					<ProtectedString name="Source"><![CDATA[--[[
	
	Description: Returns an interface to the prefab object & events.
	Author: Sceleratis
	Date: 2/5/2022
	
--]]

local folder = script.Parent
local prefab = folder.Parent
local UIHandler = folder:WaitForChild("UIHandler")
local UIEvent = prefab:WaitForChild("UIEvent")
local UIFunction = prefab:WaitForChild("UIFunction")
local indexMethodCache = {}

local function FireEvent(self, ...)
	UIEvent.Event:Fire(...)
end

local function HookFullEvent(self, ...)
	return UIEvent.Event:Connect(...)
end

local function HookEvent(event, func)
	return UIEvent.Event:Connect(function(isEvent, eventName, ...)
		if eventName == event then
			return func(...)
		end
	end)
end

local function FireFunction(self, ...)
	return UIFunction:Invoke(...) 
end

local function SetEnabled(self, bool)
	UIHandler.Disabled = not bool
	prefab.Visible = bool
end

return setmetatable({
	Prefab = prefab,
	UIEvent = UIEvent,
	UIFunction = UIFunction,
	
	SetEnabled = SetEnabled,
	FireEvent = FireEvent,
	HookEvent = HookEvent,
	HookFullEvent = HookFullEvent,
	FireFunction = FireFunction,
}, {
	__index = function(self, index)
		local cached = indexMethodCache[index]
		if cached then
			return cached
		else
			local new = function(self, ...) return FireFunction(self, index, ...) end
			indexMethodCache[index] = new 
			return new
		end
	end,
})]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
		</Item>
		<Item class="TextButton" referent="RBXFBB09E33D23342CA8AFEBF966197155D">
			<Properties>
				<bool name="Active">true</bool>
				<Vector2 name="AnchorPoint">
					<X>0</X>
					<Y>0</Y>
				</Vector2>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<bool name="AutoButtonColor">true</bool>
				<bool name="AutoLocalize">true</bool>
				<token name="AutomaticSize">0</token>
				<Color3 name="BackgroundColor3">
					<R>1</R>
					<G>1</G>
					<B>1</B>
				</Color3>
				<float name="BackgroundTransparency">1</float>
				<Color3 name="BorderColor3">
					<R>0.105882362</R>
					<G>0.164705887</G>
					<B>0.207843155</B>
				</Color3>
				<token name="BorderMode">0</token>
				<int name="BorderSizePixel">1</int>
				<bool name="ClipsDescendants">false</bool>
				<bool name="Draggable">false</bool>
				<token name="Font">3</token>
				<int name="LayoutOrder">0</int>
				<float name="LineHeight">1</float>
				<int name="MaxVisibleGraphemes">-1</int>
				<bool name="Modal">false</bool>
				<string name="Name">Expand</string>
				<Ref name="NextSelectionDown">null</Ref>
				<Ref name="NextSelectionLeft">null</Ref>
				<Ref name="NextSelectionRight">null</Ref>
				<Ref name="NextSelectionUp">null</Ref>
				<UDim2 name="Position">
					<XS>1</XS>
					<XO>-40</XO>
					<YS>0</YS>
					<YO>0</YO>
				</UDim2>
				<bool name="RichText">false</bool>
				<Ref name="RootLocalizationTable">null</Ref>
				<float name="Rotation">0</float>
				<bool name="Selectable">true</bool>
				<bool name="Selected">false</bool>
				<Ref name="SelectionImageObject">null</Ref>
				<UDim2 name="Size">
					<XS>0</XS>
					<XO>40</XO>
					<YS>0</YS>
					<YO>40</YO>
				</UDim2>
				<token name="SizeConstraint">0</token>
				<int64 name="SourceAssetId">-1</int64>
				<token name="Style">0</token>
				<BinaryString name="Tags"></BinaryString>
				<string name="Text"></string>
				<Color3 name="TextColor3">
					<R>0</R>
					<G>0</G>
					<B>0</B>
				</Color3>
				<bool name="TextScaled">false</bool>
				<float name="TextSize">14</float>
				<Color3 name="TextStrokeColor3">
					<R>0</R>
					<G>0</G>
					<B>0</B>
				</Color3>
				<float name="TextStrokeTransparency">1</float>
				<float name="TextTransparency">0</float>
				<token name="TextTruncate">0</token>
				<bool name="TextWrapped">false</bool>
				<token name="TextXAlignment">2</token>
				<token name="TextYAlignment">1</token>
				<bool name="Visible">true</bool>
				<int name="ZIndex">1</int>
			</Properties>
			<Item class="ImageLabel" referent="RBXE832C713A8684952BE1E690EB7AB2617">
				<Properties>
					<bool name="Active">false</bool>
					<Vector2 name="AnchorPoint">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<BinaryString name="AttributesSerialize">AQAAABAAAABVc2VUZXJ0aWFyeUNvbG9yAgsAAABJbWFnZUNvbG9yMw==</BinaryString>
					<bool name="AutoLocalize">true</bool>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>1</R>
						<G>1</G>
						<B>1</B>
					</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">
						<R>0.105882362</R>
						<G>0.164705887</G>
						<B>0.207843155</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">1</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">false</bool>
					<Content name="Image"><url>rbxassetid://6545531971</url></Content>
					<Color3 name="ImageColor3">
						<R>1</R>
						<G>1</G>
						<B>1</B>
					</Color3>
					<Vector2 name="ImageRectOffset">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<Vector2 name="ImageRectSize">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<float name="ImageTransparency">0.5</float>
					<int name="LayoutOrder">0</int>
					<string name="Name">ImageLabel</string>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>10</XO>
						<YS>0</YS>
						<YO>10</YO>
					</UDim2>
					<token name="ResampleMode">0</token>
					<Ref name="RootLocalizationTable">null</Ref>
					<float name="Rotation">0</float>
					<token name="ScaleType">0</token>
					<bool name="Selectable">false</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>20</XO>
						<YS>0</YS>
						<YO>20</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<Rect2D name="SliceCenter">
						<min>
							<X>0</X>
							<Y>0</Y>
						</min>
						<max>
							<X>0</X>
							<Y>0</Y>
						</max>
					</Rect2D>
					<float name="SliceScale">1</float>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UDim2 name="TileSize">
						<XS>1</XS>
						<XO>0</XO>
						<YS>1</YS>
						<YO>0</YO>
					</UDim2>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
			</Item>
		</Item>
	</Item>
</roblox>